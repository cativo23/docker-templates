version: '3.8'

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  web:
    external: true
  monitoring:
    driver: bridge

services:
  prometheus:
    image: prom/prometheus:latest
    user: "1000:1000"
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - web
      - monitoring
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.config.file=/etc/prometheus/web.yml"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN}`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.docker.network=web"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    networks:
      - web
      - monitoring
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-data:/var/lib/grafana
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.docker.network=web"
  
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    networks:
      - monitoring
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    networks:
      - monitoring
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
       - '/:/host:ro,rslave'